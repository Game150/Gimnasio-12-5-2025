/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2025-05-26 18:21:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import CapadeNegocio.Localidad;
import CapadeNegocio.ControladoradeUsuarios;

public final class registrarAlumno_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("CapadeNegocio.ControladoradeUsuarios");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("CapadeNegocio.Localidad");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Registro de alumno</title>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"CSS/Registro-alumno.css\"/>\r\n");
      out.write("        <script src=\"JS/registrarAlumno.js\"></script>\r\n");
      out.write("        ");
  
            //Se usa session para referirse a la session actual del navegador del usuario
            String mensaje = (String) session.getAttribute("Mensaje");
            String error = (String) session.getAttribute("Error");
        
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("            ");
 if (mensaje != null) { 
      out.write("\r\n");
      out.write("                alert(\"");
      out.print( mensaje );
      out.write("\");\r\n");
      out.write("            ");
 } else if (error != null) { 
      out.write("\r\n");
      out.write("                alert(\"");
      out.print( error );
      out.write("\");\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            ");

                //Se limpia el contenido de Session para evitar repeticiones de mensajes viejos
                if (mensaje != null) {request.getSession().removeAttribute("Mensaje");}
                if (error != null) {request.getSession().removeAttribute("Error");}
            
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <div class=\"form_container\">\r\n");
      out.write("            <form action=\"SVregistrarAlumnos\" method=\"POST\" class=\"form_registro\">\r\n");
      out.write("                <h1>Registro de Alumno</h1>\r\n");
      out.write("                <hr>\r\n");
      out.write("                <label for=\"nombre_alumno\">Nombre</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"Ingrese el nombre para su usuario\" id=\"nombre_alumno\" name=\"nombre_alumno\" required autofocus>\r\n");
      out.write("                <label for=\"email_alumno\">Correo</label>\r\n");
      out.write("                <input type=\"email\" placeholder=\"Ingrese su correo para vincular a su cuenta\" name=\"email_alumno\" required>\r\n");
      out.write("                <label for=\"pass_alumno\">Contraseña</label>\r\n");
      out.write("                <input type=\"password\" placeholder=\"Ingrese la contraseña\" name=\"pass_alumno\" required>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <select for=\"Localidad\" name=\"localidad_alumno\">\r\n");
      out.write("                        <option>Seleccione su localidad</option>\r\n");
      out.write("                        ");
  
                            ArrayList<Localidad> listaLocalidades = (ArrayList<Localidad>) ControladoradeUsuarios.getCP().obtenerLocalidadesCP();
                        
      out.write("\r\n");
      out.write("                        ");
for (Localidad localidad :  listaLocalidades) {
      out.write("\r\n");
      out.write("                        <option value=\"");
      out.print( localidad.getIdLocalidad() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( localidad.getNombreLocalidad() );
      out.write(" </option>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <select name=\"edad_alumno\">\r\n");
      out.write("                        <option>Seleccione su edad</option>\r\n");
      out.write("                        ");
for (int i = 18; i >= 18 && i <= 100; i++) {
      out.write("\r\n");
      out.write("                        <option>");
      out.print(i);
      out.write("</option>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <select name=\"altura_alumno\">\r\n");
      out.write("                        <option>Seleccione su altura</option>\r\n");
      out.write("                        ");
for (int i = 140; i >= 140 && i <= 210; i++) {
      out.write("\r\n");
      out.write("                        <option>");
      out.print(i);
      out.write("</option>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <select name=\"peso_alumno\">\r\n");
      out.write("                        <option>Seleccione su peso</option>\r\n");
      out.write("                        ");
for (int i = 30; i >= 30 && i <= 400; i++) {
      out.write("\r\n");
      out.write("                        <option>");
      out.print(i);
      out.write("</option>\r\n");
      out.write("                        ");
 }
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label for=\"perfil_alumno\">Ingresa una foto de perfil</label>\r\n");
      out.write("                    <label for=\"perfil_alumno\" class=\"custom-label-perfilalumno\">\r\n");
      out.write("                        Imagen de perfil\r\n");
      out.write("                    </label>\r\n");
      out.write("                    <input id=\"perfil_alumno\" type=\"file\" accept=\"image/png, image/gif, image/jpeg\" />\r\n");
      out.write("                </div>\r\n");
      out.write("                <input type=\"submit\" value=\"Enviar\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
